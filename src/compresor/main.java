/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package compresor;

import java.awt.event.KeyEvent;
import java.io.*;
import java.io.IOException;

/**
 *
 * @author Miguel A. Ardon E
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    public main() {
        try {
            initComponents();
            txt_command.append(miDir.getCanonicalPath());
            txt_command.append("\n& ");
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txt_command = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txt_command.setBackground(new java.awt.Color(0, 0, 0));
        txt_command.setColumns(20);
        txt_command.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N
        txt_command.setForeground(new java.awt.Color(51, 255, 204));
        txt_command.setRows(5);
        txt_command.setCaretColor(new java.awt.Color(255, 0, 0));
        txt_command.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_commandKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(txt_command);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_commandKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_commandKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_F1) {
                int cont = txt_command.getText().length() - 1;
                while (txt_command.getText().charAt(cont) != '&') {
                    cont--;
                }
                tem.insert((txt_command.getText().substring(cont + 2, txt_command.getText().length())), comando);
                comando++;
                System.out.println(comando);

                if (tem.get(comando).contains("ls")) {
                    while (contfile != miDir.listFiles().length) {
                        file.insert(miDir.listFiles()[contfile], contfile);
                        contfile++;
                    }
                    for (int x = 0; x < contfile; x++) {
                        if (file.get(x).isDirectory() == true) {
                            txt_command.append("\n");
                            txt_command.append(file.get(x).getName() + "\\");
                        } else {
                            txt_command.append("\n");
                            txt_command.append(file.get(x).getName());
                        }
                    }
                    txt_command.append("\n");
                    txt_command.append(miDir.getCanonicalPath());
                    txt_command.append("\n& ");
                    contfile = 0;

                } else if (tem.get(comando).startsWith("cd") == true) {
                    try {
                        path = tem.get(comando).substring(3, tem.get(comando).length());
                        System.out.println(path);
                        miDir = new File(miDir + "\\" + path + "\\");
                        System.out.println(miDir);
                        if (miDir.isDirectory()) {
                            txt_command.append("\n");
                            txt_command.append(miDir.getCanonicalPath());
                            txt_command.append("\n& ");
                        } else {
                            txt_command.append("no es directorio");
                        }
                        if (path.matches("...")) {
                            String lol = miDir.getCanonicalPath();
                            int separa = lol.length() - 1;
                            while (lol.charAt(separa) != '\\') {
                                separa--;
                            }
                            miDir = new File(lol.substring(separa, lol.length()));
                            txt_command.append("\n");
                            txt_command.append(miDir.getCanonicalPath());
                            txt_command.append("\n& ");
                        }
                    } catch (IOException ex) {
                        txt_command.append(ex.getMessage());
                    }
                } else if (tem.get(comando).startsWith("mkdir") == true) {
                    boolean bool = false;
                    File tempo = new File(miDir.toString() + tem.get(comando).substring(5, tem.get(comando).length()));
                    bool = tempo.mkdir();
                    if (bool == false) {
                        txt_command.append("Directory not created");
                        txt_command.append("\n");
                        txt_command.append(miDir.getCanonicalPath());
                        txt_command.append("\n& ");

                    } else if (bool == true) {
                        txt_command.append("Directory created");
                        txt_command.append("\n");
                        txt_command.append(miDir.getCanonicalPath());
                        txt_command.append("\n& ");

                    }
                } else if (tem.get(comando).startsWith("compres") == true) {

                } else if (tem.get(comando).startsWith("descomp") == true) {

                } else {
                    txt_command.append("\n");
                    txt_command.append(miDir.getCanonicalPath());
                    txt_command.append("\n& ");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txt_commandKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextArea txt_command;
    // End of variables declaration//GEN-END:variables
    File miDir = new File("C:\\");
    lista_string tem = new lista_string();
    lista_files file = new lista_files();
    int comando = 0;
    int contfile = 0;
    String path;
}
